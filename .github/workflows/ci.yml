name: ci
on:
  pull_request:
    branches: [ main, feature/*, hotfix/* ]
  push:
    branches: [ main, feature/*, hotfix/* ]
  workflow_dispatch:
    inputs:
      seed:
        description: 'Enter an integer value between 0 and 2147483647.'
        type: number
        required: true
        default: 0

env:
  seed: ${{ inputs.seed || github.run_number }}
  NO_COLOR: true

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{github.event.pull_request.head.ref}}
        repository: ${{ github.event.pull_request.head.repo.full_name }}
        lfs: true

    - uses: ./.github/actions/build

    - run: npm run lint
      shell: bash
      working-directory: templates

    - run: npm test
      shell: bash
      working-directory: templates

    - name: Install Chromium Headless Shell by runnign docfx commands
      shell: pwsh
      working-directory: src/docfx/bin/Release/net8.0
      run: |
        $env:PLAYWRIGHT_DRIVER_PATH = (Resolve-Path .playwright).Path
        $env:PLAYWRIGHT_NODEJS_PATH = [IO.Path]::GetDirectoryName((Get-Command node).Path)
        pwsh -File playwright.ps1 install chromium --only-shell

    - run: dotnet test -c Release -f net8.0 --no-build -- --seed ${{ env.seed }} --no-ansi --no-progress -v detailed
      id: test-net80

    - uses: codecov/codecov-action@v5
      if: matrix.os == 'ubuntu-latest'
      with:
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

    - run: echo "DOTNET_DbgEnableMiniDump=1" >> $GITHUB_ENV
      if: matrix.os == 'ubuntu-latest'

    - name: Upload Logs
      uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: logs-${{ matrix.os }}
        path: |
          msbuild.binlog
          test/**/TestResults/*.log
          test/**/TestResults/*.trx
          test/**/TestResults/*.html
          test/**/TestResults/*.ctrf

    - uses: actions/upload-artifact@v4
      if: ${{ failure() && matrix.os == 'ubuntu-latest' }}
      with:
        name: dump
        path: /tmp/coredump*

